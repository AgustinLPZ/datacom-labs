ifndef::bound[]
:imagesdir: img
endif::[]

This lab is to perform a second part for Cloud Computing using the AWS Cloud environment from Amazon. Like the last lab, you will be using your AWS Educate Account. This lab is fairly straighforward and entails that you set up two virtual machines in the AWS environment. The machines can be similar to what you set up last week. 

The point of this lab is not going to be setting up the servers, per se, but getting the two servers set up on different subnets and enabling and disabling the servers from pinging each other. It's really as simple as that. 

1) Set up two AWS servers. Making sure that you set up the servers on different subnets. 

ifndef::bound[]
:imagesdir: img
endif::[]

This lab is to introduce Cloud Computing using the AWS Cloud environment from Amazon. In this lab, you will not be responsible for setting up your own AWS environment. Your instructor will provide you with information to access AWS. When you first login to AWS, you will see the AWS dashboard. This is all of the services that are provided. 

.AWS Dashboard
image::IMG1.png[AWS Dashboard]

You will set up a virtual server in this lab via the following:

* On the dashboard, clicking on the EC2 link. This link will enable us to launch a virtual machine in the AWS environment. 

.AMI Choice
image::IMG2.png[AMI Choice]

* Choose the first Amazon API. This is a distribution of Linux specific to Amazon. 

.Instance Type
image::IMG3.png[Instance Type]

* You have many options for the size of your virtual machine. Choose the t2.micro free tier and click Next. 

.Instance Details 
image::IMG4.png[Instance Details]

* Configure Details -- Leave the defaults and click Next. Note thought that this is where you can assign a particular subnet. 

.Storage
image::IMG5.png[Storage]

* Storage -- Leave the defaults and click Next. 

.Tags
image::IMG6.png[Tags]

* Tags -- Leave the defaults and click Next. 

.Security Group
image::IMG7.png[Security Group]

* For Configure Security Group, set up a 3400 Security Group. This group will give you the ability to run HTTP and SSH traffic. Then click Review and Launch

.Review
image::IMG8.png[Review]

* When you click Launch, you are asked to Choose/Select a key pair. 

.Key Pair
image::IMG9.png[Key Pair]

* Create a new key pair and enter your name for the key pair and download them. Once you do this, you can return to my EC2 Dashboard and find your machine running (you can identify via the key that you just created in the Key Column). In the name column, also name your machine. 

.EC2 Dashboard
image::IMG10.png[EC2 Dashboard]

* On the dashboard, note your public IP address below. You will need this to access your machine. Note that this IP address will change every time the server is restarted. Now that you have your server running, you have your pem key, and you have your IP address, you can login to your EC2 machine. 

ON MAC
Use your terminal/command tool to navigate to the folder where your pem key is: 

`$ chmod 400 YourName.pem`

Login to the EC2 instance 
> ssh -i "YourName.pem" ec2-user@your.ip.address.here

ON WINDOWS
Download Putty and PuttyGen. Using PuttyGen you have to convert the pem key that you have to a ppk key that Putty will understand. There is a tutorial provided from Amazon here: 

https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/putty.html 

Once you have converted your key to a ppk key, open Putty and in the hostname/address type exactly this: 

ec2-user@your.ip.address

Scroll down to connection-SSH-auth and browse to your newly created ppk key. 

.Putty
image::IMG11.png[Putty]

* Before you click Open, you should scroll back up to Terminal and name and save your connection so you don’t have to locate your ppk key every time. Click Open. Whether on a Mac or Windows, you are now logged on: 

.EC2 SSH
image::IMG12.png[EC2 SSH]

* Now that you are on your AWS cloud instance, you will revisit few of your prior labs. We are going revisit the Apache Web Server lab. Install the Apache Web Server and run the server on port 80. Note that Amazon Linux uses the ‘sudo yum install httpd’ command and not ‘apt install apache2’ as we have been doing with Ubuntu. 

1)	Install the Apache web server and run the server on port 80
3)  Run -- sudo service httpd start -- to start the server
2)	Show the default home page of the server (include your IP address in the status bar so I can see it align with your AWS dashboard IP address)

* Modify an Apache index.html web page (/var/www) and take a picture of that new page and include that as well. 

QUESTION TO CONSIDER FOR THE FINAL: 

* Explain what is going on resource-wise in this lab. How are resources currently being distributed and managed? Are you an administrator? Could you provide a virtual server for a friend or colleague? 





